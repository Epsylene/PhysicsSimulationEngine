class pSEngine{constructor(){void 0==window.p5&&console.error("You must import p5.js in order to run the Physics Simulation Engine.","More informations on the p5 website https://p5js.org/."),window.setup=function(){window._pSimulationInstance=new pSimulator,window._pSimulationInstance.instanciate()}}}class pSimulator{constructor(){this.config={},this.beginTime=Date.now(),this.lastUpdateTime=Date.now(),this.lastDrawTime=Date.now(),this.config.engine=this.getDefaultEngineConfig(),this.config.custom={},window.getCustomConfig=this.getCustomConfig,window.getEngineConfig=this.getEngineConfig}instanciate(){this.createP5Instance(),this.plotter=new pSPlotter(this,new pSDrawer),window.runSimulator(this)}createP5Instance(){let t=this.getCanvasProportions(this.config.engine.window.proportions);this.canvas=createCanvas(t.w,t.h),this.canvas.parent(this.config.engine.runner.divId);let i=this.config.engine.runner;i.UPDATE_FPS>=i.DRAW_FPS?frameRate(i.UPDATE_FPS):console.error("The Updates FPS must be superior as the Draws FPS."),window.draw=function(){let t=_pSimulationInstance,i=Date.now(),e=(i-t.lastUpdateTime)*t.config.engine.runner.simulationSpeed;t.lastUpdateTime=i,t.plotter.update(e/1e3),i-t.lastDrawTime>=1/t.config.engine.runner.DRAW_FPS&&(t.plotter.draw(),t.lastDrawTime=i)},window.windowResized=function(){let t=_pSimulationInstance.getCanvasProportions(_pSimulationInstance.config.engine.window.proportions);resizeCanvas(t.w,t.h)}}getCanvasProportions(t){let i,e;return t.isRelative?(i=windowWidth*t.width,e=windowHeight*t.height):(i=t.width+"px",e=t.height+"px"),{w:i,h:e}}addObjects(t,i=1,...e){if(t instanceof Function)for(let n=0;n<i;n++){let i=[];for(let t=0;t<e.length;t++)e[t]instanceof Array&&void 0!=e[t][0]&&void 0!=e[t][1]&&e[t][1]instanceof Function?e[t][0]==this.config.engine.runner.addingObjectsConfigKeyWords.runFunctions?i.push(e[t][1](...e[t].slice(2))):e[t][0]==this.config.engine.runner.addingObjectsConfigKeyWords.runClass&&i.push(new e[t][1](...e[t].slice(2))):i.push(e[t]);this.plotter.objectsL.push(new t(...i))}else this.plotter.objectsL.push(t);return this}getDefaultEngineConfig(){return{runner:{divId:"simulationContent",UPDATE_FPS:120,DRAW_FPS:60,simulationSpeed:1,addingObjectsConfigKeyWords:{runFunctions:"_RUN_F",runClass:"_RUN_C"}},window:{proportions:{isRelative:!0,width:.99,height:.99}},plotter:{scale:{x:10,y:10,squareByX:!0},offset:{x:0,y:0},backgroundColor:{r:0,g:0,b:0},gridColor:{r:255,g:255,b:255,a:.6},displayGrid:!0}}}setEngineConfig(t){return t(this.config.engine),window.windowResized(),this}setCustomConfig(t){return t(this.config.custom),this}getEngineConfig(){return window._pSimulationInstance.config.engine}getCustomConfig(){return window._pSimulationInstance.config.custom}}class pSDrawer{constructor(t){this.plotter=null}point(t,i){let e=this.plotter.computeForXY(t,i);return point(e.x,e.y),this}line(t,i,e,n){let s=this.plotter.computeForXY(t,i),o=this.plotter.computeForXY(e,n);return line(s.x,s.y,o.x,o.y),this}ellipse(t,i,e,n){let s=this.plotter.computeForXY(t,i);return ellipse(s.x,s.y,e,n),this}circle(t,i,e){return this.ellipse(t,i,e,e)}stroke(t,i,e,n){return void 0==n?void 0==e?void 0==i?stroke(t):stroke(t,i):stroke(t,i,e):stroke(`rgba(${t}, ${i}, ${e}, ${n})`),this}fill(t,i,e,n){return void 0==n?void 0==e?void 0==i?fill(t):fill(t,i):fill(t,i,e):fill(`rgba(${t}, ${i}, ${e}, ${n})`),this}noStroke(){return noStroke(),this}noFill(){return noFill(),this}}class pSPlotter{constructor(t,i){this.simulator=t,this.drawer=i,this.objectsL=[],this.drawer.plotter=this}update(t){for(let i=0;i<this.objectsL.length;i++)this.objectsL[i].update(t,this.objectsL)}draw(){let t=this.simulator.config.engine.plotter,i=t.backgroundColor;background(i.r,i.g,i.b);for(let t=0;t<this.objectsL.length;t++)this.objectsL[t].draw(this.drawer);if(this.simulator.config.engine.plotter.displayGrid){let i=this.computeForXY(0,0);this.drawer.noStroke().fill(t.gridColor.r,t.gridColor.g,t.gridColor.b,t.gridColor.a).ellipse(i.x,i.y,10,10)}}computeForXY(t,i){let e=this.simulator.config.engine.plotter,n=new Vector(((t+e.offset.x)/e.scale.x+1)*width/2);return e.scale.squareByX?n.y=(-i+e.offset.y)/e.scale.x*width/2+height/2:n.y=((-i+e.offset.y)/e.scale.y+1)*height/2,n}}class Vector{constructor(t,i,e){this.x=t||0,this.y=i||0,this.z=e||0}set(t,i,e){return t instanceof Vector?(this.x=t.x||0,this.y=t.y||0,this.z=t.z||0,this):(this.x=t||0,this.y=t||0,this.z=t||0,this)}copy(){return new Vector(this.x,this.y,this.z)}add(t,i,e){return t instanceof Vector?(this.x+=t.x||0,this.y+=t.y||0,this.z+=t.z||0,this):(this.x+=t||0,this.y+=i||0,this.y+=e||0,this)}static add(t,i){return new Vector(t.x+i.x,t.y+i.y,t.z+i.z)}sub(t,i,e){return t instanceof Vector?this.add(t.mult(-1)):this.add(-t,-i,-e)}static sub(t,i){return new Vector(t.x-i.x,t.y-i.y,t.z-i.z)}mult(t){return"number"==typeof t&&isFinite(t)?(this.x*=t,this.y*=t,this.z*=t,this):(console.warn("Vector::mult()","c is undefined or isn't a finite number"),this)}div(t){return"number"==typeof t&&isFinite(t)?0==t?(console.error("Cannot divide by 0"),this):this.mult(1/t):(console.warn("Vector::div()","c is undefined or isn't a finite number"),this)}mag(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}dot(t,i,e){return t instanceof Vector?this.dot(t.x,t.y,t.z):this.x*(t||0)+this.y*(i||0)+this.z*(e||0)}cross(t){return new Vector(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}normalize(){const t=this.mag();return 0!==t&&this.div(t),this}static dist(t,i){return Vector.sub(t,i).mag()}setMag(t){return this.normalize().mult(t)}getAngle(){return Math.atan2(this.y,this.x)}rotate(t){const i=this.getAngle()+t,e=this.mag();return this.x=Math.cos(i)*e,this.y=Math.sin(i)*e,this}equals(t,i,e){return t instanceof Vector?this.equals(t.x,t.y,t.z):this.x==t&&this.y==i&&this.z==e}clear(){return this.set(0,0,0),this}toString(){return`Vector Object : [${this.x}, ${this.y}, ${this.z}]`}limit(t,i){let e=this.mag();e<t&&this.div(e).mult(t),e>i&&this.div(e).mult(i)}draw(t,i,e,n){void 0!=t?Vector.draw(t,this,i,e,n):Vector.draw(this)}static draw(t,i,e="rgb(255, 255, 255)",n=5,s=1){if((i&&0!=i.z||0!=t.z)&&console.warn("Vector drawing is only implemented in 2D yet."),void 0==i){let e=t.copy();i=e.copy(),t=e.clear()}let o=_pSimulationInstance.plotter.computeForXY(t.x,t.y),r=_pSimulationInstance.plotter.computeForXY(i.x,i.y);return push(),stroke(e),strokeWeight(s),fill(e),line(o.x,o.y,r.x,r.y),translate(r.x,r.y),push(),rotate(r.sub(o).getAngle()),translate(-n-2,0),triangle(0,n/2,0,-n/2,n,0),pop(),pop(),this}}const _pSglobalEngineInit=()=>{new pSEngine};"loading"===document.readyState?_pSglobalEngineInit():window.addEventListener("load",_pSglobalEngineInit,!1);